{
module Lexer

open FSharp.Text.Lexing
open System
open Parser

exception SyntaxError of string

let lexeme = LexBuffer<_>.LexemeString

let newline (lexbuf: LexBuffer<_>) = 
  lexbuf.StartPos <- lexbuf.StartPos.NextLine
}

// regex macros
let int = ['-' '+']? ['0'-'9']+
let white = [' ' '\t']+
let newline = '\r' | '\n' | "\r\n"
let ident = ['a'-'z']+

// rules
rule read =
  parse
  | white    { read lexbuf }
  | newline  { newline lexbuf; read lexbuf }
  | int      { INT (int (lexeme lexbuf)) }
  | '*'      { STAR }
  | '/'      { SLASH }
  | '+'      { PLUS }
  | '-'      { MINUS }
  | '('      { LEFT_PAREN }
  | ')'      { RIGHT_PAREN }
  | "let"    { LET }
  | ident    { IDENT (lexeme lexbuf) }
  | '='      { EQUALS }
  | eof      { EOF }
  | _ { raise (Exception (sprintf "SyntaxError: Unexpected char: '%s' Line: %d Column: %d" (lexeme lexbuf) (lexbuf.StartPos.Line + 1) lexbuf.StartPos.Column)) }